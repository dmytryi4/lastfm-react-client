{"version":3,"sources":["constants/apiConstants.js","components/topTracksList/topTracksList.jsx","actions/topTrackActions.js","containers/homeContainer.js"],"names":["apiConstants","baseURL","apiKey","TopTrackslist","tracks","this","props","track","react_default","a","createElement","react","Container","Row","className","map","key","Col","xs","md","name","replace","src","image","length","alt","Icon_default","path","mdiPlay","size","color","toLowerCase","Link","to","concat","artist","href","url","target","rel","mdiShare","Component","fetchTopTracksBegin","type","FETCH_TRACKS_BEGIN","fetchTopTracksSuccess","FETCH_TRACKS_SUCCESS","payload","fetchTopTracksFailure","error","FETCH_TRACKS_FAILURE","handleErrors","response","ok","Error","statusText","Home","page","limit","dispatch","perPage","fetch","then","res","json","catch","_this$props","message","topTracksList_topTracksList","withRouter","connect","state","loading","topTrackReducer"],"mappings":"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","file":"static/js/2.05af6e65.chunk.js","sourcesContent":["const apiConstants =  {\r\n    baseURL : 'http://ws.audioscrobbler.com/2.0/',\r\n    apiKey : 'ce36645ab9a1ec3fc807f3ef8ef729b7',\r\n};\r\n\r\nexport default apiConstants;","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport Icon from '@mdi/react'\r\nimport {  mdiShare, mdiPlay } from '@mdi/js';\r\nimport './topTracksList.scss';\r\n\r\nclass TopTrackslist extends Component {\r\n  \r\n   render(){\r\n        const tracks = this.props.tracks.track;\r\n        return (\r\n          <Fragment>\r\n            <Container>\r\n                <Row className=\"top-playlist top-playlist-wrapper\">\r\n                      {tracks.map((track, key) => (\r\n                        <Col xs={6} md={3} key={track.name.replace(/\\s/g, '') + '_' + key } className=\"top-playlist__item\">\r\n                          <div className=\"top-playlist__image\">\r\n                            <img \r\n                              src={ track.image.length ? \r\n                              track.image[3]['#text'] : \r\n                              'https://via.placeholder.com/300' }  \r\n                              alt={track.name} \r\n                              className=\"top-playlist_photo\"\r\n                            />\r\n                            <div className=\"top-playlist__icon\">\r\n                              <Icon path={mdiPlay} size={'22px'} color=\"#fff\" ></Icon>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"top-playlist__content\">\r\n                              <h3>{track.name.toLowerCase()}</h3>\r\n                              <div className=\"top-playlist__author-name\">\r\n                                <Link to={`/singleArtist/${track.artist.name}`}>{track.artist.name}</Link>\r\n                              </div>\r\n                              <a \r\n                                href={track.url} \r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"top-playlist__last-fm-link\"\r\n                              >\r\n                              Go to last.fm\r\n                              <Icon path={mdiShare} size={'12px'}/>\r\n                              </a>\r\n                          </div>\r\n                        </Col>\r\n                        )\r\n                      )}\r\n                </Row>\r\n              </Container>\r\n          </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopTrackslist;","import apiConstants from './../constants/apiConstants';\r\nimport {\r\n    FETCH_TRACKS_BEGIN,\r\n    FETCH_TRACKS_SUCCESS,\r\n    FETCH_TRACKS_FAILURE\r\n} from './../constants/actionsTypes';\r\n\r\nconst { baseURL, apiKey } = apiConstants;\r\n\r\nexport const fetchTopTracksBegin = () => ({\r\n    type: FETCH_TRACKS_BEGIN\r\n});\r\n\r\nexport const fetchTopTracksSuccess = tracks => ({\r\n    type: FETCH_TRACKS_SUCCESS,\r\n    payload: { tracks }\r\n});\r\n\r\nexport const fetchTopTracksFailure = error => ({\r\n    type: FETCH_TRACKS_FAILURE,\r\n    payload: { error }\r\n});\r\n\r\nexport function fetchTopTracks( page, limit ) {\r\n    return dispatch => {\r\n      dispatch(fetchTopTracksBegin());\r\n      return fetch(`${baseURL}?method=chart.gettoptracks&page=${page}&limit=${limit}&api_key=${apiKey}&format=json`)\r\n            .then(handleErrors)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                dispatch(fetchTopTracksSuccess(json));\r\n                return json;\r\n            })\r\n            .catch(error => dispatch(fetchTopTracksFailure(error)));\r\n    };\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n      throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, { Component , Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TopTrackslist from '../components/topTracksList/topTracksList';\r\nimport { fetchTopTracks } from '../actions/topTrackActions';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  \r\n  componentDidMount(){\r\n    this.props.dispatch(fetchTopTracks(\r\n      this.props.tracks['@attr'].page, \r\n      this.props.tracks['@attr'].perPage ));\r\n  }\r\n\r\n  render() {\r\n    const {  error, tracks } = this.props;\r\n\r\n    if (error) {\r\n      return <div>Error! {error.message}</div>;\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n          <Container className=\"title-container\">\r\n            <Row>\r\n              <Col><h3 className=\"title-section\">Most Popular Tracks</h3></Col>\r\n            </Row>\r\n          </Container>\r\n          <TopTrackslist tracks={tracks}/>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state ){\r\n  return {\r\n    loading: state.topTrackReducer.loading,\r\n    error: state.topTrackReducer.error,\r\n    tracks: state.topTrackReducer.tracks\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Home) );\r\n"],"sourceRoot":""}